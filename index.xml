<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/</link><description>Recent content on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Jul 2019 12:40:43 -0700</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Repl.It</title><link>https://nuevofoundation.github.io/workshops/python-turtle/using-repl-it/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/using-repl-it/</guid><description>To help Alex live in a beehive, he needs to learn how to create a honeycomb! We will use Python&amp;rsquo;s turtle library to draw a honeycomb for Alex.
Using Repl.it Today you will be using Repl.it to learn how to code in Python. Here is an example interactive window that you will use today:
Before we start, let&amp;rsquo;s first understand how the window works. The main.py file contains code, or instructions for the computer to run.</description></item><item><title>Starting Up</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/starting-up/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/starting-up/</guid><description>Starting Up The goal of today&amp;rsquo;s activity is to learn C# skills and incorporate your new-found knowledge to create a Guess The Word game! Let&amp;rsquo;s get the game set up.
Open your favorite internet browser (such as Edge, Firefox, Google Chrome, Internet Explorer), and go to https://aka.ms/nuevoguesstheword. Your screen should look like this:
We will ignore some of the details on this screen, but we will go over some of the basics that show up.</description></item><item><title>Time to Create</title><link>https://nuevofoundation.github.io/workshops/adventure/time-to-create/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/time-to-create/</guid><description>It’s time to start creating our own stories with all the skills we’ve learned today! The question that we are tackling today is how to get the audience involved with the story line, and the answer to this is CODE!</description></item><item><title>More about functions</title><link>https://nuevofoundation.github.io/workshops/python-basics/functions/functions/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/functions/functions/</guid><description>Suppose you have many lines of code, and you would like to give this section of code a meaningful name. Functions are blocks of code that do just that. A function is a set of instructions that we give to the computer to store, and it can take in parameters (input data) and output data. A function in Python looks like this:
Let’s analyze this piece of code. The def tells the computer that you are writing a function.</description></item><item><title>Writing to Console (Print statement)</title><link>https://nuevofoundation.github.io/workshops/python-basics/python-console/writing-to-console/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/python-console/writing-to-console/</guid><description>Make your program talk to you! Print statements are used to print something on the console. Use print(&amp;quot;Hello World&amp;quot;) to print Hello World in the output screen. We will later learn that print is a function and we use it to perform a print job. Whatever you pass to the print function is printed on the screen. Let&amp;rsquo;s start by doing a print statement. A print statement allows you to take control of the computer and make it print something out!</description></item><item><title>The Basics - Drawing a colored line</title><link>https://nuevofoundation.github.io/workshops/python-turtle/the-basics/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/the-basics/</guid><description>Before Alex can learn how to create a beehive, he must first learn how to draw a colored line. We will add code to the below repl.it window, and we will do this in two parts.
First, we need tell the turtle what color we want the line to be. To do this, let&amp;rsquo;s type in:
turtle.color(&amp;quot;orange&amp;quot;) Let&amp;rsquo;s try to understand this line of code in more detail.
Strings Anything you see in quotation marks is called a string.</description></item><item><title>Section 1: Story Boarding</title><link>https://nuevofoundation.github.io/workshops/adventure/story-boarding/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/story-boarding/</guid><description>To get started, pull out a piece a paper and start &amp;ldquo;story boarding&amp;rdquo;. What does that mean? In order to develop a great story that allows the reader to choose between options, one can outline the flow of their story. This is a great planning step, that will you help you tremendously once you start coding! I would start with the 3 or 4 main choices your protagonist is going to make in the story.</description></item><item><title>Writing to Console</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/writing-to-console/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/writing-to-console/</guid><description>Writing to Console Console.WriteLine means to tell the computer to print the sentence enclosed within the parentheses () out onto the console.
Working Together In the repl.it window below, press run. You see that Hello World is printed out to the screen on the right. Without removing the quotation marks, try changing &amp;quot;Hello World&amp;quot; to another sentence. Press run to see if anything changes. Add another Console.WriteLine below the current line to print a second sentence below the first sentence.</description></item><item><title>Reading from the Console</title><link>https://nuevofoundation.github.io/workshops/python-basics/python-console/reading-from-console/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/python-console/reading-from-console/</guid><description>Now that we know the basics about variables, we can ask for input from the user. Use the following line to tell our program to wait until the user types something into the console. Then, the computer takes whatever is typed into the console, and stores it into the variable called value.
value = input Here&amp;rsquo;s and examples of how to use input() to accept user input:
print(&amp;#34;What&amp;#39;s your name?&amp;#34;) value = input() print(&amp;#34;Hello &amp;#34; + value + &amp;#34;!</description></item><item><title>Activity 1 - Drawing a square</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-1/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-1/</guid><description>Kudos! You helped Alex draw a line! Now let’s step it up and help Alex draw a square. To draw a square, we need to follow these steps:
Go forward for 50 steps Turn left by 90 degrees Go forward for 50 steps Turn left by 90 degrees Go forward for 50 steps Turn left by 90 degrees Go forward for 50 steps Remember to use turtle.forward() to draw lines.</description></item><item><title>Comments</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/comments/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/comments/</guid><description>Comments Developers often need to collaborate with other developers. Comments are an easy way for developers to write notes in the code and communicate with others. Comments are ignored by the computer; thus, they are also an easy way to tell the computer to not run certain lines of code. There are two ways to create comments:
To comment out one line, place // in front of a line of code.</description></item><item><title>Section 2: Transferring the Story Board to Code!</title><link>https://nuevofoundation.github.io/workshops/adventure/story-board-code/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/story-board-code/</guid><description>It’s time to open repl.it. Now it is time to create, let’s get creative!
You can continue working off Nuevo’s story line:
You can work on a template for a Choose Your Own Adventure game:
Or you can start from scratch and make it your own! Just go to repl.it and start story telling!</description></item><item><title>Activity 2 - Simplifying code with loops</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-2/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-2/</guid><description>Great! You drew a square. But notice that we are writing the same lines over and over again! We had to repeat the instructions to draw a line and turn left 4 times. Wouldn’t it be great if we can give instructions once and tell the program to repeat it 4 times? Fear not, we can!
To do this, we need to use loops. Loops run a set of instructions multiple times.</description></item><item><title>Activity 1</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-1/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-1/</guid><description>Activity 1 Go to the code containing the GuessTheWord game. Press run. Notice that Press 'run' on the top of the screen to play again. is the only thing that is printed to the console. Let&amp;rsquo;s add a welcome message so that the player knows they playing the Guess the Word game.
Find // TODO (ACTIVITY 1) in the code. Add a line of code to print Welcome to C# GuessTheWord to the console.</description></item><item><title>Activity 3 - Drawing a hexagon</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-3/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-3/</guid><description>Great job! You just drew your first shape in Python with Turtle! Now let’s slightly change the code we already wrote to draw a square to instead draw a hexagon. Alex is a bee, after all, and he needs to draw hexagons to build his first honeycomb.
To help you draw a hexagon, think of how many sides a hexagon has. How many degrees are in each angle of a hexagon?</description></item><item><title>Strings</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/strings/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/strings/</guid><description>Strings Anything that is surrounded in quotation marks is called a string. This is how a computer represents words or sentences. For example, &amp;quot;a&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;banana!&amp;quot;, and &amp;quot;Hello World&amp;quot; are strings, but Hello World and 2 are not strings, because the quotation marks are missing.
You can combine many strings together using the + operator. For example:
&amp;quot;Apple&amp;quot; + &amp;quot;Pineapple&amp;quot; produces the string &amp;quot;ApplePineapple&amp;quot;. &amp;quot;Nuevo&amp;quot; + &amp;quot; &amp;quot; + &amp;quot;Foundation&amp;quot; produces the string &amp;quot;Nuevo Foundation&amp;quot;.</description></item><item><title>Strings</title><link>https://nuevofoundation.github.io/workshops/python-basics/data-types/strings/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/data-types/strings/</guid><description>Anything that is surrounded by quotation marks is called a string. This is how a computer represents words or sentences. For example, &amp;ldquo;a&amp;rdquo;, &amp;ldquo;2&amp;rdquo;, &amp;ldquo;banana!&amp;quot;, and &amp;ldquo;Hello World&amp;rdquo; are strings, but 2 and Hello World are not strings, because the quotation marks are missing. You can combine many strings together using the + sign!
The strings that you combine do not have to be real words! For example, &amp;quot;Ap&amp;quot; + &amp;quot;ple&amp;quot; will produce the string &amp;quot;Apple&amp;quot;.</description></item><item><title>Activity 4 - Simplifying code with functions</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-4/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-4/</guid><description>We drew one hexagon. But this is just one of many hexagons Alex needs to build his honeycomb. Once again, it seems that we would have to repeat the code many times to draw multiple hexagons. Fortunately, we don&amp;rsquo;t have to! Functions to the rescue!
Functions A function is a way to group together lines of code to do something. For instance, turtle.forward(50) moves the turtle forward 50 steps, and turtle.</description></item><item><title>Activity 2</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-2/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-2/</guid><description>Activity 2 Find // TODO (ACTIVITY 2) in the GuessTheWord code. For the Guess the Word game, we will give the computer a word bank, and the computer will choose one of the words randomly to use for the game. So far, we have added the words &amp;quot;Hello&amp;quot; and &amp;quot;World&amp;quot; to the word bank. However, a Guess the Word game with only two possible words to guess is not fun at all!</description></item><item><title>Activity 5 - Drawing a honeycomb</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-5/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-5/</guid><description>This is the finale! Let&amp;rsquo;s create the honeycomb that Alex will live in. Fortunately, a honeycomb is simply 6 hexagons, so let&amp;rsquo;s combine our knowledge of functions and loops to make our honeycomb!
In this activity, create a new function called draw_honeycomb(). Inside the function body, create a loop that repeats 6 times. Inside the loop we have to first draw a hexagon using our draw_hexagon() function we previously defined. Next, move the turtle so it can draw the next hexagon.</description></item><item><title>Numbers</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/numbers/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/numbers/</guid><description>Numbers The computer can also do regular math that you see in school. Use Console.WriteLine to print out the result from the math expressions. No quotation marks are needed for numbers!
Console.WriteLine(5 + 4); Console.WriteLine(6 * (9 - 7) / 3); Here is the full list of math symbols that you can use:
Operator Description Operator Description + Add \ | Divide | - Subtract % Modulo (remainder) * Multiply (,) Parenthesis Fun Fact: Computer Division The computer does division differently from your regular calculator.</description></item><item><title>Numbers</title><link>https://nuevofoundation.github.io/workshops/python-basics/data-types/numbers/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/data-types/numbers/</guid><description>The computer can also do your regular math that you do in school. Use print to print out the result from the math expressions. No quotation marks are needed for numbers! Unlike strings, you can do math on numbers.
The computer does division differently from your regular calculator. Computer division will exclude remainders or decimals.
For example,
15/4 makes 3 and not 3.75
You can also try using the math symbols to make your own expressions!</description></item><item><title>Part 2 - Building a Mandala Flower</title><link>https://nuevofoundation.github.io/workshops/python-turtle/part-2/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/part-2/</guid><description>Great job! You finished building a honeycomb for Alex’s beehive, but Alex needs to also get his pollen from flowers! Wouldn’t it be nice to add a flower to the picture as well? In part 2, we will be creating a mandala flower!
(Stay tuned - we&amp;rsquo;ll show you what a mandala flower looks like.)</description></item><item><title>Booleans</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/booleans/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/booleans/</guid><description>Booleans Booleans are true or false statements. Unlike strings or numbers, booleans store statements of truth: is what I am saying true or false? For example, if I ask, &amp;ldquo;Are you a robot?&amp;quot;, this question produces a true or false result, which we call a Boolean. In this case, since you are not a robot (hopefully!), we would produce false.
We can also use math operators to create boolean expressions. Here are some examples; however, notice the unusual symbols for &amp;ldquo;equal to&amp;rdquo; and &amp;ldquo;not equal to&amp;rdquo;:</description></item><item><title>Activity 6 - Moving the turtle</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-6/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-6/</guid><description>Our first step is to move the turtle to a new location to draw the flower (we don’t want to draw the flower on top of the beehive!). To do this, we first need to use the following methods:
turtle.penup() turtle.goto(x,y) turtle.pendown() turtle.penup() tells the turtle to pick up its pen so it doesn’t draw while it is moving. Then, with turtle.goto(x,y), we are telling the turtle the position where the turtle moves to.</description></item><item><title>Boolean Operators</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/boolean-operators/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/boolean-operators/</guid><description>Booleans Operators You can also connect boolean expressions together using the &amp;amp;&amp;amp; (AND) and the || (OR) operator. For example, suppose I ask: &amp;ldquo;Are you a human, and is Nuvi a robot?&amp;rdquo; The word &amp;ldquo;and&amp;rdquo; connects the two true-false questions together. In this case, since it is true that you are a human, and it is also true that Nuvi is a robot, then the overall result is true.
Here&amp;rsquo;s a chart that describes what happens when we connect booleans together:</description></item><item><title>Booleans</title><link>https://nuevofoundation.github.io/workshops/python-basics/data-types/booleans/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/data-types/booleans/</guid><description>Booleans are True or False statements. Unlike strings or numbers, booleans store statements of truth: is what I&amp;rsquo;m saying true or false?
For example, if I say, &amp;ldquo;You are a robot&amp;rdquo;, a boolean can store whether this statement is true. In this case, since you are not a robot (hopefully!), False would be stored.
What are the boolean answers to these questions about you?
I am a human. _______ I have 25 fingers.</description></item><item><title>Activity 7 - Drawing a figure 8</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-7/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-7/</guid><description>Great! Now let’s make a figure 8 as the first step to making a mandala flower! A figure 8 is just two circles that are opposite to each other. To do this we can make use of the turtle.circle(x) method, which takes an integer x as the radius of the circle. (You may recall that 2 * radius is how wide the circle is.) Having the radius as an argument means we can decide how big or small the circle should be.</description></item><item><title>Variables</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/variables/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/variables/</guid><description>Variables Variables are simply names that we can give to values such as strings, numbers and booleans. We use variables to store information that the computer can keep track of.
Here&amp;rsquo;s how to declare a variable named str. We say str has the value &amp;quot;Hello World&amp;quot;. Can you describe what the other variables below mean?
var str = &amp;#34;Hello World&amp;#34;; var x = 88; var happy = true; Press run. Note that variables are not printed out to the console.</description></item><item><title>Activity 8 - Creating a mandala flower</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-8/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-8/</guid><description>We’re done creating our first figure 8! We can now use the figure_8() function to create a mandala flower! A mandala flower is many figure 8s placed on top of each other at different angles. So, to do this we need to use a&amp;hellip; you guessed it, a loop!
Create a new function called mandala_flower(). In the loop we will call the figure_8() function we wrote earlier to create a figure 8.</description></item><item><title>Activity 3</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-3/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-3/</guid><description>Activity 3 This activity is split into 2 parts and will test your knowledge about variables. Before starting, look out for HINT (ACTIVITY 3) in the code, where we declare a variable called lives which stores the number of lives the player has, and use the variable to print out how many lives the player has at the start of the game. This should give you an idea for how to complete the following two parts.</description></item><item><title>Activity 9 - Coloring your mandala flower</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-9/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-9/</guid><description>Now that we have the shape of a mandala flower, it’s time to color it! We’re still going to use the turtle.color() method; however this time we’re going to use an RGB value instead of a string color value, so that we can produce a larger variety of colors.
RGB (Red-Green-Blue) colors In primary school, you might recall that by mixing colors together, you can produce new colors. For example, combining red and blue together make purple.</description></item><item><title>Reading from Console</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/reading-from-console/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/reading-from-console/</guid><description>Reading from Console Now that we know the basics about variables, we can now accept input from the user. Use the following line to tell the console to wait until the user types something into the console. Then, the computer takes whatever is typed into the console, and stores it into the variable called input.
var input = Console.ReadLine(); Here&amp;rsquo;s an example of how to use Console.ReadLine to accept user input:</description></item><item><title>Activity 10 - Randomizing the color of your mandala flower petals</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-10/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-10/</guid><description>We’ve successfully set the color of the mandala flower to an RGB value. Now, let&amp;rsquo;s explore changing the color of the individual mandala flower petals?
We will make use of python’s random library. The random.randint() method allows us to choose a random value for each of the red, green, or blue value. To choose a value that is between 0 inclusive and 256 exclusive (in other words, between 0 and 255 inclusive), we need to use random.</description></item><item><title>Activity 4</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-4/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-4/</guid><description>Activity 4 This activity has four parts. This is a great time to use your knowledge of comments, numbers, variables, and reading from console to complete the 4 activities. Some background information for each activity is provided below, and hints are provided in the code. After each part, press run and make sure there are no errors present in the console.
Activity 4.1 First, let&amp;rsquo;s introduce some more code into our game.</description></item><item><title>Activity 11 - Now, it's your turn!</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-11/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-11/</guid><description>If there is any time left, try drawing your own shapes and designs! Make your picture interesting using various shapes and colors.
Click here to open a new blank repl.it window to start on your creation.
Help, I am stuck! Stuck? Check the Answer key for the activity that you are stuck on!</description></item><item><title>If-else statements</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/if-else-statements/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/if-else-statements/</guid><description>If-else statements You can use if statements to run code statement only if certain conditions are met. Here is an example:
var myNum = (93 + 41) / 12; if (myNum == 11) { Console.WriteLine(&amp;#34;They are equal!&amp;#34;); } Inside the () beside if, you should specify a boolean expression. If the expression is true, the code inside { } is executed. In this case, since myNum is equal to 11, They are equal!</description></item><item><title>Python Turtle - Answer Key</title><link>https://nuevofoundation.github.io/workshops/python-turtle/answer-key/</link><pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/answer-key/</guid><description>The below 3 lines are needed for the introduction activity and all the other activities as well.
import turtle turtle.color(&amp;#34;orange&amp;#34;) turtle.shape(&amp;#34;turtle&amp;#34;) Introduction Activity turtle.color(&amp;#34;orange&amp;#34;) turtle.forward(50) Activity 1 turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) Activity 2 for i in range(4): turtle.forward(50) turtle.left(90) Activity 3 for i in range(6): turtle.forward(50) turtle.left(60) Activity 4 def draw_hexagon(): for i in range(6): turtle.forward(50) turtle.left(60) draw_hexagon() Activity 5 def draw_honeycomb(): for i in range(6): draw_hexagon() turtle.</description></item><item><title>Activity 5</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-5/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-5/</guid><description>Activity 5 This activity is split into two parts. Use your knowledge of if-else statements to complete the activities. As always, press run after completing each part to check for errors.
Activity 5.1 After the player guesses a letter, and we have checked whether the letter appears in the word, we need to check if the entire word has been guessed. If the entire word has been correctly identified, we should let the computer know that the player has won the game.</description></item><item><title>While loops</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/while-loops/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/while-loops/</guid><description>While loops while loops are an easy way to repeat the execution of lines without having to reuse a line many times. For example, to print Hello World five times in a row, you can do:
var counter = 1; while (counter &amp;lt;= 5) { Console.WriteLine(&amp;#34;Hello World&amp;#34;); counter = counter + 1; } Like an if statement, inside the () beside while, you should specify a boolean expression. If the expression is true, the code inside the curly braces { } is executed.</description></item><item><title>Activity 6</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-6/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-6/</guid><description>Activity 6 - Completing the game! Now, let&amp;rsquo;s finally address the bug that was introduced in Activity 4.2. The game should continue to ask the player to guess letters if they have some lives remaining, and they have not yet won the game. Look at the for loop. As you might have noticed, even though you might have lives remaining, the game abruptly stops after only 3 guesses. We will replace this for-loop with a while-loop, with the correct looping condition.</description></item><item><title>Answer Key - Python Image Manipulation</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/answer-key/</link><pubDate>Sat, 25 Apr 2020 10:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/answer-key/</guid><description>Python Basic Answers: Activity 1: # The sentences can be anything! Encourage having fun with it. print(&amp;#34;My name is Nuvi!&amp;#34;) print(&amp;#34;I love making memes.&amp;#34;) Activity 2: # There can be a variety of answers, here are a few: print(&amp;#34;Nuevo&amp;#34; + &amp;#34;&amp;#34; + &amp;#34;Foundation&amp;#34;) print(&amp;#34;Nu&amp;#34; + &amp;#34;evo&amp;#34; + &amp;#34;Found&amp;#34; + &amp;#34;ation&amp;#34;) print(&amp;#34;N&amp;#34; + &amp;#34;uevo F&amp;#34; + &amp;#34;oundation&amp;#34;) Activity 3: print(2-19) # -17 print((3 + 5) * 6) # 48 print((13 + 5 * 8) / (6 - (3 + 7))) # -13.</description></item><item><title>Answer Key - C# Guess the Word</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/answer-key/</link><pubDate>Sat, 28 Mar 2020 10:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/answer-key/</guid><description>Activity 1: using System; class MainClass { public static void Main(string[] args) { Console.WriteLine(&amp;#34;Hello there&amp;#34;); Console.WriteLine(&amp;#34;I am awesome&amp;#34;); } } Activity 2: using System; class MainClass { public static void Main(string[] args) { Console.WriteLine(&amp;#34;Nuevo&amp;#34; + &amp;#34; &amp;#34; + &amp;#34;Foundation&amp;#34;); Console.WriteLine(&amp;#34;Nue&amp;#34; + &amp;#34;vo &amp;#34; + &amp;#34;Foundation&amp;#34;); Console.WriteLine(&amp;#34;Nuevo &amp;#34; + &amp;#34;Foun&amp;#34; + &amp;#34;dation&amp;#34;); } } Activity 3: class MainClass { public static void Main(string[] args) { Console.WriteLine(2-19); Console.WriteLine((3+5)*6); Console.WriteLine((13+5*8)/(6-(3+7))); } } Activity 4: class MainClass { public static void Main(string[] args) { Console.</description></item><item><title>Project Overview</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/project-overview/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/project-overview/</guid><description>Applications like Instagram and Snapchat allow its users to modify their images. For example, you can rotate your image and make it black and white. Ever wondered how these apps do it? The answer is using code!
Today, we’re going to learn how to do some image manipulations using Python!
Setting up the project To get started let’s start with importing a module. What does that mean? To do fun stuff with images, we need to unlock some functions to use.</description></item><item><title>Open an image</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/open-image/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/open-image/</guid><description>To change an image, we must open an image. We can use the Pillow Image module we just imported in the setup. Let’s first find some images to open. Find an image of your choice and download it. Once you have downloaded it, navigate back to your repl.it window and upload your image by clicking on the three dots and selecting ‘upload file’.
For example, to upload the cat.jpg file:</description></item><item><title>Rotate the image</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/rotate-image/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/rotate-image/</guid><description>Now that we have the image in our code, let’s turn it in different directions. To do that, let’s look at the Pillow Image function rotate().
The rotate image works using angles. For example, rotate(45) will tilt your picture sideways by 45 degrees. Using rotate(90) will turn your picture sideways.
Let’s give that a try! Let’s rotate the image before we save it:
image = Image.open("cat.jpg") image.rotate(90) image.save("myCat.jpg") Hmm, the picture didn’t seem to rotate.</description></item><item><title>Image Filters</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/image-filters/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/image-filters/</guid><description>I want to turn my cat black and white! Let&amp;rsquo;s do this by using the Pillow ImageFilter function filter() &amp;amp; convert().
To use the filter() function, you can specify the ImageFilter type within the parentheses. For example, image.filter(ImageFilter.BLUR) will make the image blurry. Or, if you use ImageFilter.CONTOUR instead, it will add a ‘sketch’ type effect to your image.
Add something like this below your previously added code
blurredImage = image.</description></item><item><title>Making a meme!</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/making-meme/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/making-meme/</guid><description>So now that my image looks how I want it to look, I want to add some text. We can do that by utilizing the Pillow ImageDraw module. Let’s import that at the top of our file along with our other import statements.
from PIL import Image from PIL import ImageFilter from PIL import ImageDraw To allow us to add text, we must redraw the same image we used earlier for image manipulation.</description></item><item><title>Web Developer Guidelines</title><link>https://nuevofoundation.github.io/workshops/guidelines/web-developer/</link><pubDate>Mon, 22 Jul 2019 14:08:32 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/guidelines/web-developer/</guid><description>This document is for website developers only for changing the Nuevo Foundation workshop project templates and style.
Before getting started Before adding/updating the website, ensure you have sync&amp;rsquo;d with the project team and the existing work in the Project Backlog.
Setup Follow the instructions in the Project readme.md to install Git and Hugo to test the project locally.
Web design styles and structure Images: Website images should be themes/images CSS Ignore the SCSS files and just use CSS files in /themes/docdock/static/css/ Make sure to add a reference to the CSS you want to include in the head.</description></item></channel></rss>
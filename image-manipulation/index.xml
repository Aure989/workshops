<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python Image Manipulation on Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/</link><description>Recent content in Python Image Manipulation on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 10 Feb 2020 13:24:17 -0700</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/image-manipulation/index.xml" rel="self" type="application/rss+xml"/><item><title>Starting Up</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/starting-up/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/starting-up/</guid><description>Welcome!
Click here to open repl.it in a new tab in your favorite browser (such as Edge, Firefox, Chrome, etc). Scroll to the bottom of the page, look for languages, search for Python and click it.
You should see the following screen:
In here you&amp;rsquo;ll see a main.py file. This file contains code, or instructions for the computer to run. Anything that results from running the code will be displayed on the right side.</description></item><item><title>Writing to Console (Printing)</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/writing-to-console/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/writing-to-console/</guid><description>Let&amp;rsquo;s start by doing a print statement. A print statement allows you to take control of the computer and make it print something out!
To start, copy and paste this text into your Repl.it main.py:
print(&amp;quot;Hello, World!&amp;quot;) Then, click run.
Watch your console say &amp;ldquo;Hello, World!&amp;rdquo; on the screen to the right! print tells the computer to print the sentence within the parentheses () into the console window, or the screen on the right.</description></item><item><title>Activity 1</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/activity-1/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/activity-1/</guid><description>Without removing the quotation marks, try changing
&amp;quot;Hello, World!&amp;quot; to another sentence. For example,
&amp;quot;My name is Nuvi!&amp;quot; Press run to see if aything changes. Add another print below the current line to print a second sentence below the first.
Press run to see if the two sentences print out
We will use printing a lot in the later lessons, so make sure you understand this before continuing!</description></item><item><title>Comments</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/comments/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/comments/</guid><description>If at any time during this activity, you wish to write notes to help you understand the code, you can use the # symbol to create a comment.
Any text after the # symbol will be ignored by the computer!
Try adding a comment above your first line of code and press run. You will see that the computer will ignore your comment. Be careful, if you remove the # symbol, your code will not work!</description></item><item><title>Strings</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/strings/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/strings/</guid><description>Anything that is surrounded by quotation marks is called a string. This is how a computer represents words or sentences. For example, &amp;ldquo;a&amp;rdquo;, &amp;ldquo;2&amp;rdquo;, &amp;ldquo;banana!&amp;quot;, and &amp;ldquo;Hello World&amp;rdquo; are strings, but 2 and Hello World are not strings, because the quotation marks are missing. You can combine many strings together using the + sign!
For example,
&amp;quot;Apple&amp;quot; + &amp;quot;Pineapple&amp;quot; produces the string &amp;quot;ApplePineapple&amp;quot;
&amp;quot;Nuevo&amp;quot; + &amp;quot; &amp;quot; + &amp;quot;Foundation&amp;quot; produces &amp;quot;Nuevo Foundation&amp;quot;</description></item><item><title>Activity 2</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/activity-2/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/activity-2/</guid><description>Start your code with the line print(&amp;quot;Nuevo&amp;quot; + &amp;quot; &amp;quot; + &amp;quot;Foundation&amp;quot;). If you run it, you should get the following output:
Nuevo Foundation Let&amp;rsquo;s try and find two more ways to print the string &amp;quot;Nuevo Foundation&amp;quot; using two plus (+) symbols in each print statement.
Once you make this work, you should have &amp;quot;Nuevo Foundation&amp;quot; printed out 3 times. In other words, your console should look like this after you press run:</description></item><item><title>Numbers</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/numbers/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/numbers/</guid><description>The computer can also do your regular math that you do in school. Use print to print out the result from the math expressions. No quotation marks are needed for numbers! Unlike strings, you can do math on numbers.
The computer does division differently from your regular calculator. Computer division will exclude remainders or decimals.
For example,
15/4 makes 3 and not 3.75
You can also try using the math symbols to make your own expressions!</description></item><item><title>Activity 3</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/activity-3/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/activity-3/</guid><description>Let&amp;rsquo;s try to figure out the answers to the following using Python. Try printing out the result of the below (make sure you don&amp;rsquo;t miss any parentheses):
2 - 19 (3 + 5) * 6 (13 + 5 * 8) / (6 - (3 + 7)) Challenge Can you print out this statement? &amp;quot;527 time 199 is: __&amp;quot;
You will fill in the blank with the answer of what (527 * 199) is.</description></item><item><title>Booleans</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/booleans/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/booleans/</guid><description>Booleans are True or False statements. Unlike strings or numbers, booleans store statements of truth: is what I&amp;rsquo;m saying true or false?
For example, if I say, &amp;ldquo;You are a robot&amp;rdquo;, a boolean can store whether this statement is true. In this case, since you are not a robot (hopefully!), False would be stored.
What are the boolean answers to these questions about you?
I am a human. _______ I have 25 fingers.</description></item><item><title>Activity 4</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/activity-4/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/activity-4/</guid><description>Try printing out the answers to the following expressions using print. If the results for any of these statements don&amp;rsquo;t make sense, please ask for help!
54 &amp;lt; (10 + 32) (37 / 5) != 7 &amp;ldquo;Hello&amp;rdquo; + &amp;ldquo;World&amp;rdquo; == &amp;ldquo;Hello World&amp;rdquo; False == False role=&amp;quot;alert&amp;quot;&amp;gt; Challenge: Try making your own expressions!
Fun Fact: Connecting Booleans with AND and OR operators You can also connect boolean expressions together using the AND and the OR operator.</description></item><item><title>Variables</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/variables/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/variables/</guid><description>Variables are simply names that we can give to values such as strings, numbers, and booleans. Here’s how to make a variable named s. We say s is a string that has the value &amp;quot;Hello, World!&amp;quot;. Can you describe the following variables?
s = &amp;quot;Hello, World!&amp;quot;
x = 88
happy = True
Press Variables are not printed out to the console. Instead, the variable simply saves the string, number, or boolean into the computer’s memory.</description></item><item><title>Activity 5</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/activity-5/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/activity-5/</guid><description>Create two new variables: A variable named comp that stores the string &amp;quot;Computer&amp;quot;. A variabe named five that stores the number 5. Next, use the variables and what you learned in the previous activities to print out the following to the console. You MUST use the variables!
``` Computer 5 ComputerComputer 10 ComputerComputerComputer 15 ``` Hint: If you&amp;rsquo;re stuck, consider using the + operator. Remember that you can use the variables comp and five multiple times in the same line!</description></item><item><title>Reading from the Console</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/reading-from-console/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/reading-from-console/</guid><description>Now that we know the basics about variables, we can ask for input from the user. Use the following line to tell our program to wait until the user types something into the console. Then, the computer takes whatever is typed into the console, and stores it into the variable called value.
value = input() Here&amp;rsquo;s and examples of how to use input() to accept user input:
print(`"What's your name?</description></item><item><title>Activity 6</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/activity-6/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/activity-6/</guid><description>Let’s see if we can write a program that first prints the following two lines to console:
Welcome! How can I help you today? Afterwards, the console waits for user input. After the user types something in the console and presses Enter, the computer prints out:
You asked: [input]? I don’t know the answer to [input]. Goodbye! &amp;ldquo;[input]&amp;rdquo; should be replaced with whatever the user had typed into the console.</description></item><item><title>Functions</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/functions/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/functions/</guid><description>Suppose you have many lines of code, and you would like to give this section of code a meaningful name. Functions are blocks of code that do just that. A function is a set of instructions that we give to the computer to store, and it can take in parameters (input data) and output data. A function in Python looks like this:
Let’s analyze this piece of code. The def tells the computer that you are writing a function.</description></item><item><title>Activity 7</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/activity-7/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/activity-7/</guid><description>Let’s try to create some simple math functions. Create a function called add that takes in two parameters, number1 and number2, and return the sum of the two numbers.
First copy the structure of the triple function. Change the triple function name, and replace the parameter number with number1 and number2, separated with a comma. Both number1 and number2 should be int, and don’t forget to add number1 and number2 together!</description></item><item><title>Project Overview</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/project-overview/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/project-overview/</guid><description>Applications like Instagram and Snapchat allow its users to modify their images. For example, you can rotate your image and make it black and white. Ever wondered how these apps do it? The answer is using code!
Today, we’re going to learn how to do some image manipulations using Python!
Setting up the project To get started let’s start with importing a module. What does that mean? To do fun stuff with images, we need to unlock some functions to use.</description></item><item><title>Open an image</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/open-image/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/open-image/</guid><description>To change an image, we must open an image. We can use the Pillow Image module we just imported in the setup. Let’s first find some images to open. Find an image of your choice and download it. Once you have downloaded it, navigate back to your repl.it window and upload your image by clicking on the three dots and selecting ‘upload file’.
For example, to upload the cat.jpg file:</description></item><item><title>Rotate the image</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/rotate-image/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/rotate-image/</guid><description>Now that we have the image in our code, let’s turn it in different directions. To do that, let’s look at the Pillow Image function rotate().
The rotate image works using angles. For example, rotate(45) will tilt your picture sideways by 45 degrees. Using rotate(90) will turn your picture sideways.
Let’s give that a try! Let’s rotate the image before we save it:
image = Image.open("cat.jpg") image.rotate(90) image.save("myCat.jpg") Hmm, the picture didn’t seem to rotate.</description></item><item><title>Image Filters</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/image-filters/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/image-filters/</guid><description>I want to turn my cat black and white! Let&amp;rsquo;s do this by using the Pillow ImageFilter function filter() &amp;amp; convert().
To use the filter() function, you can specify the ImageFilter type within the parentheses. For example, image.filter(ImageFilter.BLUR) will make the image blurry. Or, if you use ImageFilter.CONTOUR instead, it will add a ‘sketch’ type effect to your image.
Add something like this below your previously added code
blurredImage = image.</description></item><item><title>Making a meme!</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/making-meme/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/making-meme/</guid><description>So now that my image looks how I want it to look, I want to add some text. We can do that by utilizing the Pillow ImageDraw module. Let’s import that at the top of our file along with our other import statements.
from PIL import Image from PIL import ImageFilter from PIL import ImageDraw To allow us to add text, we must redraw the same image we used earlier for image manipulation.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python: Machine Learning Basics using TensorFlow on Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/</link><description>Recent content in Python: Machine Learning Basics using TensorFlow on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 09 Sep 2020 16:19:17 -0700</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/python-tensorflow/index.xml" rel="self" type="application/rss+xml"/><item><title>Welcome to your new Summer job!</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/welcome/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/welcome/</guid><description>Hey there, congratulations! You have been hired at an apparel returns processing warehouse for the summer!
Your job is to take returns of clothing and sort them based on the type of clothing they are. At orientation, your supervisor shows you the traditional, by-hand method to sorting this clothing. On your first day, you notice it is more time consuming than you expected. Not wanting to do more work than you have to of course, you convince your supervisors that you can devise a more efficient method using machine learning.</description></item><item><title>Activity 1 - Importing the TensorFlow library and datasets</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-1/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-1/</guid><description>The first thing we have to do is to import the TensorFlow library in order to use functions that will allow us to train your model.
We will also be implementing plots to visualize the prediction of our model, so for that we need to import the following libraries:
# Importing TensorFlow and tf.keras libraries import tensorflow as tf from tensorflow import keras # Helper libraries for statistics and plotting import numpy as np import matplotlib.</description></item><item><title>Activity 2 - Displaying RGB Color values for images</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-2/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-2/</guid><description>You now take a picture of your shoe from your samples.
Go ahead and copy and paste the following code into your Google Colab notebook:
plt.figure() plt.imshow(train_images[0]) #Shows the first image in the data set as a plot or different colored pixels plt.colorbar() #displays the color bar on the right plt.grid(False) plt.show() #displays the entire plot Question 1 Change the index of the “train_images[x]” and look at the color bar on the right, what is the max pixel value?</description></item><item><title>Progress Update 1</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_1/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_1/</guid><description>If you would like to test the following code, visit this link
To edit this code, click on the &amp;lsquo;Copy to Drive&amp;rsquo; button to make a personal copy of this notebook. Make sure you are logged in to your Google account. If you are using a Nuevo Google account temporarily Once you make a copy, please make sure to replace the &amp;ldquo;Copy of&amp;rdquo; with your name, along with the file name.</description></item><item><title>Activity 3 - Displaying Clothing Samples</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-3/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-3/</guid><description>Now, you will be displaying all of your clothing samples by doing the following:
Copy the following code into your Colab notebook. This displays a collection of images along with their specific category.
plt.figure(figsize=(10,10)) #sets the image size to 10x10 inches for i in range(25): #displays first 25 images with their class name plt.subplot(5,5,i+1) plt.xticks([]) plt.yticks([]) plt.grid(False) plt.imshow(train_images[i], cmap=plt.cm.binary) plt.xlabel(class_names[train_labels[i]]) plt.show() #shows images with their labels Question 1 Your supervisor hands you out around 15-20 more clothing samples, which you will have to include in your program.</description></item><item><title>Building the Neural Network</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/building_neural_network/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/building_neural_network/</guid><description>This is the first step in building a neural network, which is actually a tool to allow us to do &amp;ldquo;machine learning&amp;rdquo;. With this tool, we are training a model/computer to analyze various training images/data, likely labeled in advance, and perform and execute a specific task as a result. In our scenario, we are using pre-labeled images of clothing to train our model to correctly predict the type of clothing for any clothing sample we input.</description></item><item><title>Activity 4 - Training the Model</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-4/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-4/</guid><description>The following code determines how many times model is trained. It is normal for this segment of code to take longer than usual to run.
model.fit(train_images, train_labels, epochs=10) Epochs represent the number of times the model processes all the training data.
The following code prints out the overall test accuracy.
test_loss, test_acc = model.evaluate(test_images, test_labels, verbose=2) print(&amp;#39;\nTest accuracy:&amp;#39;, test_acc) Question 1 Set the value of epochs equal to 2.</description></item><item><title>Activity 5 - Testing the Model</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-5/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-5/</guid><description>Now that we have built and trained our model, we want to go ahead and test it against returned clothing items. Let&amp;rsquo;s start off with our first sample item, which was the shoe.
probability_model = tf.keras.Sequential([model, tf.keras.layers.Softmax()]) predictions = probability_model.predict(test_images) The following code gives a list of probabilities that an image fits in a specific category. The index value corresponds to what image would be classified.
predictions[0] #Returns the index with highest probability, depends on the index value.</description></item><item><title>Activity 6 - Testing the Model</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-6/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-6/</guid><description>Let&amp;rsquo;s repeat the same thing with the second clothing sample you chose in Activity 2. Change the index value to the one used for the second image in Activity 2. Then, repeat Activity 5 starting from predictions[your_index_value]</description></item><item><title>Progress Update 2</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_2/</link><pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_2/</guid><description>Great job! You are now able to successfully identify which category an image most likely falls under.
To verify that your code is correct up to this checkpoint, please compare your code against the example code provided below.
The outputs of the code may vary. You only need to copy the code blocks, and not the output blocks, as they will be generated automatically in your notebook.
These lighter shaded blocks contain python code These darker shaded blocks contain the output</description></item><item><title>Plotting the Model and its Predictions</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/plotting_model/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/plotting_model/</guid><description>Now that we are able to classify the category of an individual piece of clothing using your model, we will now visualize these predictions by creating a bar plot for a specified image.
Copy the following code into Colab: The plot_image function displays an image along with its predicted classification, the confidence level of the model for that category, and the actual classification (which is for reference).
The plot_value_array function plots the confidence values generated by the model as a bar graph.</description></item><item><title>Activity 7 - Plotting an Image's predicted Category</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-7/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-7/</guid><description>Copy and Paste the following code into Google Colab: # Grab an image from the test dataset. This shows the resolution of the image. #NOTE: This index will be changed and its corresponding plot would be displayed in the next few steps img = test_images[0] print(img.shape) # Add the image to a batch where it&amp;#39;s the only member. img = (np.expand_dims(img,0)) print(img.shape) predictions_single = probability_model.predict(img) print(predictions_single) plot_value_array(0, predictions_single[0], test_labels) #plot the graph containing all the class names _ = plt.</description></item><item><title>Progress Update 3</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_3/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_3/</guid><description>To verify that your code is correct up to this checkpoint, please compare your code against the example code provided below.
If you would like to test the following code, visit this link
To edit this code, click on the &amp;lsquo;Copy to Drive&amp;rsquo; button to make a personal copy of this notebook. Make sure you are logged in to your Google account.
If you are using a Nuevo Google account temporarily Once you make a copy, please make sure to replace the &amp;ldquo;Copy of&amp;rdquo; with your name, along with the file name.</description></item><item><title>Answer Key</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/answer_key/</link><pubDate>Mon, 14 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/answer_key/</guid><description>Activity 1 class_names = [&amp;#39;T-shirt/top&amp;#39;, &amp;#39;Trouser&amp;#39;, &amp;#39;Pullover&amp;#39;, &amp;#39;Dress&amp;#39;, &amp;#39;Coat&amp;#39;,&amp;#39;Sandal&amp;#39;, &amp;#39;Shirt&amp;#39;, &amp;#39;Sneaker&amp;#39;, &amp;#39;Bag&amp;#39;, &amp;#39;Ankle boot&amp;#39;]
Activity 2 The max pixel value is 255 for any index used.
Activity 3 To answer Q1 you would change your code to the following:
plt.figure(figsize=(10,10)) #sets the image size to 10x10 pixels for i in range(42): #displays first 42 images with their class name plt.subplot(6,7,i+1) plt.xticks([]) plt.yticks([]) plt.grid(False) plt.imshow(train_images[i], cmap=plt.cm.binary) plt.xlabel(class_names[train_labels[i]]) plt.show() #shows images with their labels Activity 4 Answers may vary, sample answers provided below:</description></item></channel></rss>
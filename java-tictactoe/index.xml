<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java: TicTacToe on Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/</link><description>Recent content in Java: TicTacToe on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 23 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/java-tictactoe/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/using-repl-it/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/using-repl-it/</guid><description>Tic Tac Toe Summary Using Repl.it Today you will be using Repl.it to code in Java. Here is the starter code you will use today:
Before we start, let&amp;rsquo;s first understand how the window works. The Main.java file contains code, or instructions for the computer to run. By pressing the run button, you tell the computer to perform the instructions in the code. Any results from running the code will be displayed on the bottom white screen, under the result tab.</description></item><item><title>1. Set Up the Board!</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-1/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-1/</guid><description>Prerequisites (from Java: Basics) activity-1: Print Statements and Comments activity-2: Variables and Types activity-3: Operators activity-5: Methods activity-6: Object and Classes activity-7: Data Structures (Array &amp;amp; ArrayList) These are the concepts from the Java: Basics workshop that we will use in this activity. Please refer to these activity to review or learn the concepts before continuing!
In this activity, we will have a program that prints out the game board and gaming prompt, like the output below:</description></item><item><title>2. Read and Process Input</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-2/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-2/</guid><description>Prerequisites (from Java: Basics) activity-1: Print Statements and Comments activity-2: Variables and Types activity-3: Operators activity-4: Control Structures activity-5: Methods activity-6: Object and Classes These are the concepts from the Java: Basics workshop that we will use in this activity. Please refer to these activity to review or learn the concepts before continuing!
1. Importing Packages In Java, an efficient way to obtain user input is to use the Scanner class in java.</description></item><item><title>3. Update the Game Board</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-3/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-3/</guid><description>Prerequisites (from Java: Basics) activity-1: Print Statements and Comments activity-2: Variables and Types activity-4: Control Structures activity-5: Methods activity-6: Object and Classes activity-7: Data Structures (Array &amp;amp; ArrayList) These are the concepts from the Java: Basics workshop that we will use in this activity. Please refer to these activity to review or learn the concepts before continuing!
Prerequisites
In the last exercise, we have a program that prints out the board and prompt Enter your move (1-9): to user with each valid move.</description></item><item><title>4. Check the winner</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-4/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-4/</guid><description>Prerequisites (from Java: Basics) activity-1: Print Statements and Comments activity-2: Variables and Types activity-3: Operators activity-4: Control Structures activity-5: Methods activity-6: Object and Classes activity-7: Data Structures (Array &amp;amp; ArrayList) These are the concepts from the Java: Basics workshop that we will use in this activity. Please refer to these activity to review or learn the concepts before continuing!
1. Displaying a Winner Write a method getWinner(String[] curBoard) that returns the winner in a String with an array input of the current game board.</description></item><item><title>5. (Optional) AI Move</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-5/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-5/</guid><description>This is a bonus activity! To continue, you should have completed the Tic-Tac-Toe program from the previous exercises!
Prerequisites (from Java: Basics) activity-1: Print Statements and Comments activity-2: Variables and Types activity-3: Operators activity-4: Control Structures activity-5: Methods activity-6: Object and Classes activity-7: Data Structures (Array &amp;amp; ArrayList)
Let&amp;rsquo;s make the computer think Previously, we use a Random object to randomly generate a move for the computer. As a result, the competitiveness of the computer is fairly low.</description></item><item><title>Java: TicTacToe - Answer Key</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/answer-key/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/answer-key/</guid><description>activity-1: Game SetUp public class TicTacToe_Nuevo { public static void main(String args[]){ // the board that stores moves String[] board = {&amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;}; // starting board that labeled position(only printed once) String[] startBoard = {&amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;4&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;6&amp;#34;, &amp;#34;7&amp;#34;, &amp;#34;8&amp;#34;, &amp;#34;9&amp;#34;}; System.out.println(&amp;#34;&amp;lt;&amp;lt;&amp;lt;~ Tic Tac Toe ~&amp;gt;&amp;gt;&amp;gt;\n* Choose number 1 - 9 to place your move\n* Player: &amp;#39;X&amp;#39; Computer: &amp;#39;O&amp;#39;\n&amp;#34; ); printBoard(startBoard); System.</description></item><item><title/><link>https://nuevofoundation.github.io/workshops/java-tictactoe/placeholder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/placeholder/</guid><description>Read and Process Input In Java, an efficient way to obtain user input is to use the Scanner class in java.util package. To use this class and all its methods, we need to import the class with the following line of code on the top of the file.
import java.util.Scanner; 5. Error Handling In Java, we can deal with potential errors by putting the code that might cause an error in an try-catch block.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python: Choose Your Own Adventure Game on Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/adventure/</link><description>Recent content in Python: Choose Your Own Adventure Game on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 23 Jul 2019 11:45:38 -0700</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/adventure/index.xml" rel="self" type="application/rss+xml"/><item><title>Starting up</title><link>https://nuevofoundation.github.io/workshops/adventure/activity-1/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/activity-1/</guid><description>Open your favorite internet browser (such as Edge, Firefox, Google Chrome, Internet Explorer) and go to https://repl.it. Scroll to the bottom of the page, look for ‘languages’, search for Python and click it.
You should see something like the following screen:
We will ignore some of the details on this screen, but we will go over some of the basics that show up. The main.py file contains code, or instructions for the computer to run.</description></item><item><title>Strings</title><link>https://nuevofoundation.github.io/workshops/adventure/activity-2/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/activity-2/</guid><description>Anything that is surrounded by quotation marks is called a string. This is how a computer represents words or sentences. For example, &amp;quot;a&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;banana!&amp;quot;, and &amp;quot;Hello World&amp;quot; are strings, but 2 and Hello World are not strings, because the quotation marks are missing.
You can combine many strings together using the + sign.
For example:
&amp;quot;Apple&amp;quot; + &amp;quot;Pineapple&amp;quot; produces the string &amp;quot;ApplePineapple&amp;quot;. &amp;quot;Nuevo&amp;quot; + &amp;quot; &amp;quot; + &amp;quot;Foundation&amp;quot; produces the string &amp;quot;Nuevo Foundation&amp;quot;.</description></item><item><title>Variables</title><link>https://nuevofoundation.github.io/workshops/adventure/activity-3/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/activity-3/</guid><description>Variables are simply names that we can give to values such as strings, numbers, and booleans. Here’s how to make a variable named s. We say s is a string that has the value &amp;quot;Hello, World!&amp;quot;. Can you describe the following variables?
s = &amp;#34;Hello, World!&amp;#34; x = 88 happy = True Press run.
Note that variables are not printed out to the console. Instead, the variable simply saves the string, number, or boolean into the computer’s memory.</description></item><item><title>Reading from the Console</title><link>https://nuevofoundation.github.io/workshops/adventure/activity-4/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/activity-4/</guid><description>Now that we know the basics about variables, we can ask for input from the user. Use the following line to tell our program to wait until the user types something into the console. Then, the computer takes whatever is typed into the console, and stores it into the variable called value. value = input()
Here’s an example of how to use input() to accept user input:
print(&amp;#34;What&amp;#39;s your name?&amp;#34;) value = input() print(&amp;#34;Hello &amp;#34; + value + &amp;#34;!</description></item><item><title>Conditional statements</title><link>https://nuevofoundation.github.io/workshops/adventure/activity-5/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/activity-5/</guid><description>Now that we know the basics of print statements, variables, and reading in input from the user – we can combine all these awesome skills with conditional statements. Conditional statements allow the computer to make decisions based off the value of an expression. In the real world, we use conditional statements all the time to make decisions! For example, if it is raining outside, then I use an umbrella. In this example, the I evaluated the weather outside and because it was raining, I made the sequential decision to use an umbrella.</description></item><item><title>Part 3 - Time to Create</title><link>https://nuevofoundation.github.io/workshops/adventure/part-3/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/part-3/</guid><description>It’s time to start creating our own stories with all the skills we’ve learned today! The question that we are tackling today is how to get the audience involved with the story line, and the answer to this is CODE!</description></item><item><title>Section 1: Story Boarding</title><link>https://nuevofoundation.github.io/workshops/adventure/story-boarding/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/story-boarding/</guid><description>To get started, pull out a piece a paper and start &amp;ldquo;story boarding&amp;rdquo;. What does that mean? In order to develop a great story that allows the reader to choose between options, one can outline the flow of their story. This is a great planning step, that will you help you tremendously once you start coding! I would start with the 3 or 4 main choices your protagonist is going to make in the story.</description></item><item><title>Section 2: Transferring the Story Board to Code!</title><link>https://nuevofoundation.github.io/workshops/adventure/story-board-code/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/story-board-code/</guid><description>It’s time to open repl.it. Now it is time to create, let’s get creative!
You can continue working off Nuevo’s story line:
You can work on a template for a Choose Your Own Adventure game:
Or you can start from scratch and make it your own! Just go to repl.it and start story telling!</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python: Building a Pong Game on Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/</link><description>Recent content in Python: Building a Pong Game on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 29 Jul 2019 13:24:17 -0700</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/pygame-pong/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Repl.It</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/using-repl-it/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/using-repl-it/</guid><description>To build our game we will use the Pygame library, which provides a set of readymade functionality that we can use to build video games and animations.
Using Repl.it Today you will be using Repl.it to build the Pong game.
If you would like to re-cap on how to use Repl.it. Checkout the following Python basics tutorial
Next, let&amp;rsquo;s explain further some of the code that has been provided to you in the main.</description></item><item><title>The Basics - Class and Object</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/the-basics/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/the-basics/</guid><description>Classes and objects Before you start building a game, you should know how to draw different objects and modify them as per the way they need to look and move on computer screen.
In order to build objects you first decide how they should look, what role they would perform in your game and how player can control their movement on screen. You do this by creating a class for each object you want on screen.</description></item><item><title>Activity 1 - Define the width of the Pong screen</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-1/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-1/</guid><description>Activity 1 You can adjust the boundary of pong game by adjusting the height and width of rectangle that represent the boundary.
Go to the code containing the Pong game. Press run. Notice that the game&amp;rsquo;s boundary don&amp;rsquo;t look right - see the below image. Let&amp;rsquo;s fix this in this activity so that game boundary looks good.
Find // TODO (ACTIVITY 1) in the code. Modify the WIDTH attribute of Pong class.</description></item><item><title>Activity 2 - Change the color of objects in game.</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-2/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-2/</guid><description>Activity 2 Great! You just fixed the game&amp;rsquo;s boundary. Now, notice that how everything inside game looks black and white. Let&amp;rsquo;s give it some colors.
To do this, we need to modify the RGB values in COLOR attribute. RGB stands for RED, GREEN, BLUE. In computer screen you can modify the color of each pixel by modifying its RGB value. Every color can be represented by combination of different RGB values in it.</description></item><item><title>Activity 3 - Change the key assignment to move left paddle</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-3/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-3/</guid><description>Activity 3 Kudos! You not only fixed the game boundary, you are able to give color to objects too. Now let&amp;rsquo;s see if you can change the keys for paddle movement.
To do this, we need to modify one of the parameters we pass to create the left paddle object. Remember, from basics section how you defined the Paddle class with UP and DOWN key assignments as its attributes.
Find // TODO (ACTIVITY 3) in the code.</description></item><item><title>Activity 4 - Change the key assignment to move right paddle.</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-4/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-4/</guid><description>Activity 4 So you know how to change key assignment for paddle&amp;rsquo;s movement. Great work!
Can you apply the knowledge about Paddle object and its attributes that influence its movement on screen to change the key assignment for right paddle?
Find // TODO (ACTIVITY 4) in the code. Modify the appropriate attribute value for right paddle so that it accepts &amp;lsquo;UP&amp;rsquo; key for upward movement of right paddle.
Confirm the result after pressing run.</description></item><item><title>Activity 5 - Declare and use a variable for font</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-5/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-5/</guid><description>Activity 5 Great progress so far! Now lets make use of a variable to control font value.
In this activity you need to apply the knowledge about variables you learnt in Python basics.
Find // TODO (ACTIVITY 5) in the code. Declare a variable font_label, assign it the value 'arial'. Now take a look at statement in code font_name = pygame.font.match_font('arial'). Can you figure out the place in this statement where you should use this new variable to control the font displayed on screen ?</description></item><item><title>Activity 6 - Fix the 'if' condition to track correct score.</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-6/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-6/</guid><description>Activity 6 You have come a long way, we hope you are enjoying!
In this activity you need to apply the knowledge about &amp;lsquo;if&amp;rsquo; control structure you learnt in Python basics.
Find // TODO (ACTIVITY 6) in the code. We have on purpose introduced an 'if' block that is checking for wrong condition for tracking the score when right paddle miss the ball. This not only causing the wrong score to be displayed on screen , as well as it causing the ball to move in erratic manner.</description></item><item><title>Activity 7 - Define the key combination to exit the game</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-7/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-7/</guid><description>Activity 7 Time for final activity in this Tutorial; yay! You have done an awesome job to get here.
In this activity you need to change the way game exits anytime by pressing a given key combination.
Find // TODO (ACTIVITY 7) in the code. Pygame library gives you a handy way by using event to detect what keystrokes are being pressed anytime during the life of program. Currently the game exits by pressing the 'BACKSPACE' key.</description></item><item><title>Wrap up</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/wrapup/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/wrapup/</guid><description>Congratulations! You made it! We are excited to see you making it here, hope you had fun while working on game and learnt concepts that help you making games
Now, it&amp;rsquo;s your turn! We recommend to utilise the knowledge gained from this tutorial to make various interesting changes into game.
Add sets to the game, where each set is a first to 21 points. The player who wins the best of 3 sets will be declared as the winner.</description></item><item><title>Pygame Pong game - Answer Key</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/answer-key/</link><pubDate>Sun, 29 Mar 2020 20:24:33 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/answer-key/</guid><description>Activity 1 HEIGHT = 600 WIDTH = 800 Activity 2 COLOR = (70, 130, 180) Activity 3 self.paddles.append(Paddle( # The left paddle self.BALL_VELOCITY, pygame.K_w, pygame.K_s, 0, self.HEIGHT / 2 - self.PADDLE_HEIGHT / 2, self.PADDLE_WIDTH, self.PADDLE_HEIGHT )) Activity 4 self.paddles.append(Paddle( # The right paddle self.BALL_VELOCITY, pygame.K_UP, pygame.K_DOWN, self.WIDTH - self.PADDLE_WIDTH, self.HEIGHT / 2 - self.PADDLE_HEIGHT / 2, self.PADDLE_WIDTH, self.PADDLE_HEIGHT )) Activity 5 font_label = &amp;#39;arial&amp;#39; font_name = pygame.font.match_font(font_label) Activity 6 if ball.</description></item></channel></rss>